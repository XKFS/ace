#pragma once
#include "basic_component.h"
#include <engine/rendering/camera.h>

#include <base/basetypes.hpp>
#include <graphics/render_pass.h>
#include <graphics/render_view.h>
#include <math/math.h>

namespace ace
{
//-----------------------------------------------------------------------------
// Forward Declarations
//-----------------------------------------------------------------------------

//-----------------------------------------------------------------------------
// Main Class Declarations
//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
//  Name : camera_component (Class)
/// <summary>
/// Class that contains our core camera data, used for rendering and other
/// things.
/// </summary>
//-----------------------------------------------------------------------------
class camera_component : component_crtp<camera_component>
{
public:
    //-------------------------------------------------------------------------
    // Constructors & Destructors
    //-------------------------------------------------------------------------
    camera_component();

    //-------------------------------------------------------------------------
    // Public Methods
    //-------------------------------------------------------------------------
    //-----------------------------------------------------------------------------
    //  Name : set_fov ()
    /// <summary>
    ///
    ///
    ///
    /// </summary>
    //-----------------------------------------------------------------------------
    void set_fov(float fovDegrees);

    //-----------------------------------------------------------------------------
    //  Name : set_near_clip ()
    /// <summary>
    ///
    ///
    ///
    /// </summary>
    //-----------------------------------------------------------------------------
    void set_near_clip(float distance);

    //-----------------------------------------------------------------------------
    //  Name : set_far_clip ()
    /// <summary>
    ///
    ///
    ///
    /// </summary>
    //-----------------------------------------------------------------------------
    void set_far_clip(float distance);

    //-----------------------------------------------------------------------------
    //  Name : set_projection_mode ()
    /// <summary>
    ///
    ///
    ///
    /// </summary>
    //-----------------------------------------------------------------------------
    void set_projection_mode(projection_mode mode);

    //-----------------------------------------------------------------------------
    //  Name : get_fov ()
    /// <summary>
    ///
    ///
    ///
    /// </summary>
    //-----------------------------------------------------------------------------
    auto get_fov() const -> float;

    //-----------------------------------------------------------------------------
    //  Name : get_near_clip ()
    /// <summary>
    ///
    ///
    ///
    /// </summary>
    //-----------------------------------------------------------------------------
    auto get_near_clip() const -> float;

    //-----------------------------------------------------------------------------
    //  Name : get_far_clip ()
    /// <summary>
    ///
    ///
    ///
    /// </summary>
    //-----------------------------------------------------------------------------
    auto get_far_clip() const -> float;

    //-----------------------------------------------------------------------------
    //  Name : get_projection_mode ()
    /// <summary>
    ///
    ///
    ///
    /// </summary>
    //-----------------------------------------------------------------------------
    auto get_projection_mode() const -> projection_mode;

    //-----------------------------------------------------------------------------
    //  Name : get_camera ()
    /// <summary>
    ///
    ///
    ///
    /// </summary>
    //-----------------------------------------------------------------------------
    auto get_camera() -> camera&;

    //-----------------------------------------------------------------------------
    //  Name : get_camera ()
    /// <summary>
    ///
    ///
    ///
    /// </summary>
    //-----------------------------------------------------------------------------
    auto get_camera() const -> const camera&;

    //-----------------------------------------------------------------------------
    //  Name : update ()
    /// <summary>
    ///
    ///
    ///
    /// </summary>
    //-----------------------------------------------------------------------------
    void update(const math::transform& t);

    //-----------------------------------------------------------------------------
    //  Name : get_hdr ()
    /// <summary>
    ///
    ///
    ///
    /// </summary>
    //-----------------------------------------------------------------------------
    auto get_hdr() const -> bool;

    //-----------------------------------------------------------------------------
    //  Name : set_hdr ()
    /// <summary>
    ///
    ///
    ///
    /// </summary>
    //-----------------------------------------------------------------------------
    void set_hdr(bool hdr);

    //-----------------------------------------------------------------------------
    //  Name : set_viewport_size ()
    /// <summary>
    ///
    ///
    ///
    /// </summary>
    //-----------------------------------------------------------------------------
    void set_viewport_size(const usize32_t& size);

    //-----------------------------------------------------------------------------
    //  Name : get_viewport_size ()
    /// <summary>
    ///
    ///
    ///
    /// </summary>
    //-----------------------------------------------------------------------------
    auto get_viewport_size() const -> const usize32_t&;

    //-----------------------------------------------------------------------------
    //  Name : get_ortho_size ()
    /// <summary>
    ///
    ///
    ///
    /// </summary>
    //-----------------------------------------------------------------------------
    auto get_ortho_size() const -> float;

    //-----------------------------------------------------------------------------
    //  Name : set_ortho_size ()
    /// <summary>
    ///
    ///
    ///
    /// </summary>
    //-----------------------------------------------------------------------------
    void set_ortho_size(float size);

    //-----------------------------------------------------------------------------
    //  Name : get_ppu ()
    /// <summary>
    ///
    ///
    ///
    /// </summary>
    //-----------------------------------------------------------------------------
    auto get_ppu() const -> float;

    //-----------------------------------------------------------------------------
    //  Name : get_render_view ()
    /// <summary>
    ///
    ///
    ///
    /// </summary>
    //-----------------------------------------------------------------------------
    auto get_render_view() -> gfx::render_view&;

private:
    //-------------------------------------------------------------------------
    // Private Member Variables.
    //-------------------------------------------------------------------------
    /// The camera object this component represents
    camera camera_;
    /// The render view for this component
    gfx::render_view render_view_;
    /// Is the camera HDR?
    bool hdr_ = true;
};

} // namespace ace
